from fastapi import APIRouter, HTTPException
from fastapi.responses import FileResponse
from services.generate_pdf import generate_pdf
import httpx
import json

router = APIRouter()

API_URL = "http://185.209.21.152:8000/result/by-uuid"


@router.get("/generate_pdf/{fileUuid}", response_class=FileResponse)
async def get_pdf(fileUuid: str):
    try:
        url = f"{API_URL}/{fileUuid}"
        print(f"üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {url}")

        headers = {"accept": "application/json"}

        async with httpx.AsyncClient() as client:
            response = await client.get(url, timeout=5, headers=headers)
        print(f"üì• –û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω! –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìù –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ API: {response.text}")

        if response.status_code != 200:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ API: {response.status_code} {response.text}")
            raise HTTPException(status_code=500, detail="Failed to retrieve analysis result")

        try:
            data = response.json()
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω—ã: {data}")
            ai_percentage = data.get("result", "0%")
            filename = data.get("filename")
            print(f"üìä AI Probability: {ai_percentage}, Filename: {filename}, FileUuid: {fileUuid}") #–î–æ–±–∞–≤–∏–ª –≤—ã–≤–æ–¥ fileUuid

            if filename is None:
                raise HTTPException(status_code=500, detail="Filename not found in API response")
            if ai_percentage is None:
                raise HTTPException(status_code=500, detail="AI probability not found in API response")

            pdf_path = generate_pdf(filename, ai_percentage, fileUuid)  # –ü–µ—Ä–µ–¥–∞–µ–º fileUuid –≤ generate_pdf
            return FileResponse(pdf_path, filename=f"{filename}_report.pdf", media_type="application/pdf")

        except json.JSONDecodeError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
            raise HTTPException(status_code=500, detail=f"Error parsing API response: {e}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
            raise HTTPException(status_code=500, detail=str(e))

    except httpx.TimeoutException:
        print("‚è≥ API –∑–∞–≤–∏—Å! –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É.")
        raise HTTPException(status_code=504, detail="API timeout")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_pdf: {e}")
        raise HTTPException(status_code=500, detail=str(e))